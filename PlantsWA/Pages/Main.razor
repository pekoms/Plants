@page "/main"
@using Plants.Api.Domain.Dtos;
@using Plants.WA.Services;
@using Plants.WA.Shared


<NavMenu />
<div class="container d-flex align-items-center justify-content-center" style="height: 100vh;">
    
    <div class="card text-center">
        <h2>Plantas del dia</h2>
        <div class="card-body">
             @if (plants.Any()==false)
        {
                <p>Cargando datos...</p>
            }
            else
            {               
                    
                <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img class="d-block w-100" src="..." alt=@plant.Id>
                        </div>                      
                    </div>                   
                    <a class="carousel-control-next" role="button" data-slide="next" @onclick="()=>Like(plant)">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Inject]
    private IPlantRecordService PlantRecordService { get; set; }

    private List<PlantRecordDTO> plants { get; set; } = new List<PlantRecordDTO>();
    private PlantRecordDTO plant { get; set; } = new PlantRecordDTO();
    private string token;


    protected override async Task OnInitializedAsync()
    {
        token = await jsr.InvokeAsync<string>("localStorage.getItem", "jwtToken");
        plants = await PlantRecordService.GetAllPlantsByPlantId("f2217c4a-cbf1-40f7-9883-ef89df250823",token);
        plant = plants.FirstOrDefault();
    }

    private void Like(PlantRecordDTO plantRecord)
    {
        plantRecord.Votes = plantRecord.Votes +1;
        PlantRecordService.Update(plantRecord,token);
        plants.Remove(plantRecord);
        if (plants.Any())
        {
            plant = plants.FirstOrDefault();
        }
    }
    private void Dislike(PlantRecordDTO plantRecord)
    {
        if (plantRecord.Votes >= 1)
        {
            plantRecord.Votes = plantRecord.Votes - 1;
            PlantRecordService.Update(plantRecord,token);
        }

        
        plants.Remove(plantRecord);
        if (plants.Any())
        {
            plant = plants.FirstOrDefault();
        }
       
    }
}
