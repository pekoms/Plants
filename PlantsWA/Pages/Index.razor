@page "/"
@inject NavigationManager NavigationManager
@inject IJSRuntime jsr


@using Plants.Domain.Domain.Dtos;
@using Plants.WA.Services
@using Plants.WA.Shared

<div class="container h-100">
  
    <div class="row align-items-center h-100">
        <div class="col-md-6 mx-auto">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center">Iniciar sesión</h3>
                    <form>
                        <div class="form-group">
                            <label for="inputEmail">Correo electrónico</label>
                            <input type="email" class="form-control" @bind="@inputEmail" id="inputEmail"  required placeholder="Ingresa tu correo electrónico">
                        </div>
                        <div class="form-group">
                            <label for="inputPassword">Contraseña</label>
                            <input type="password" class="form-control" @bind="@inputPassword" id="inputPassword" required placeholder="Ingresa tu contraseña">
                        </div>
                        <div class="text-center" style="margin-top: 1rem;">
                            <button type="button" class="btn btn-primary" @onclick="IniciarSesion">Iniciar sesión</button>
                            <button type="button" class="btn btn-secondary" @onclick="Registrarse">Registrarse</button>
                        </div>
@* 
                        @if (invalidInput)
                        {
                            <div class="card text-bg-danger mb-3" style="max-width: 18rem;">
                                <div class="card-header">Atención</div>
                                <div class="card-body">
                                    <p class="card-text">Correo electrónico o contraseña incorrectos 2.</p>
                                </div>
                            </div>
                        }
                        @if (wrongLogin)
                        {
                            <div class="card text-bg-danger mb-3" style="max-width: 18rem;">
                                <div class="card-header">Atención</div>
                                <div class="card-body">
                                    <p class="card-text">Correo electrónico o contraseña incorrectos.</p>
                                </div>
                            </div>
                        } *@
                    </form>                
                  
                </div>
               
            </div>
        </div>
    </div>
</div>



@code {
    private bool invalidInput { get; set; } = false;
    private bool wrongLogin { get; set; } = false;
    [Inject]
    public IUserService UserService { get; set; }
    [Inject]
    ModalService ModalService { get; set; } = default!;
    [CascadingParameter]
    public string userInfo { get; set; }
    private string inputEmail { get; set; }
    private string inputPassword { get; set; }

   
    private TokenDTO jwtToken { get; set; }


    private async void IniciarSesion()
    {

        if (!string.IsNullOrEmpty(inputEmail) || !string.IsNullOrEmpty(inputPassword))
        {
            var loginUser = new UserDTO
                {
                    Name = inputEmail,
                    Password = inputPassword
                };

            jwtToken = await UserService.Login(loginUser);
            if (!string.IsNullOrEmpty(jwtToken.token))
            {
                // Iniciar sesión exitosamente
                
                await jsr.InvokeVoidAsync("localStorage.setItem", "jwtToken", jwtToken.token);
                await jsr.InvokeVoidAsync("localStorage.setItem", "name", loginUser.Name);

                NavigationManager.NavigateTo("main");
            }
            else
            {
                //Todo:Sacar a componente
                var modalOption = new ModalOption
                    {
                        Title = "Modal title",
                        Message = "Correo electrónico o contraseña incorrectos",
                        Type = ModalType.Warning,
                    };

                await ModalService.ShowAsync(modalOption);
                
            }
           
        }
        else
        {
            //Todo:Sacar a componente
            var modalOption = new ModalOption
                {
                    Title = "Modal title",
                    Message = "Campos usuario o contraseña vacio",
                    Type = ModalType.Warning,
                };

            await ModalService.ShowAsync(modalOption);
            
        }

      
      
    }

    private void Registrarse()
    {
        NavigationManager.NavigateTo("registration");
    }


 

    
}
