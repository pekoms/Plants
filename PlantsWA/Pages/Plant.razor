@page "/Plants"
@using Plants.Api.Domain.Dtos
@using Plants.WA.Services
@using Plants.WA.Shared
@inject NavigationManager NavigationManager
@inject IJSRuntime jsr

<NavMenu />
<div class="row">
    <button type="button" class="btn btn btn-success" @onclick="@NuevaPlanta">Nueva Planta</button>

    @if (plants == null && plants.Any())
    {
        <p>Cargando datos...</p>
    }else{
        @foreach (var data in plants)
        {
            <div class="col-sm-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@data.Nombre</h5>
                        <p class="card-text">@data.Especie</p>
                        @if (data.Foto != null)
                        {                            
                            <img src="@data.Foto" alt="Imagen cargada" />
                        }
                        <button @onclick="()=> Observar(data.Id)" value="Send Name: @data.Id" type="button" class="btn btn-primary">Mas detalles</button>
                    </div>
                </div>
            </div>
        }
    }
  
    
</div>

@code {
    [Parameter]
    public List<PlantDTO> plants { get; set; } = new List<PlantDTO>();
    [Inject]
    public IPlantService PlantService { get; set; }
    private string user;
    private string token;


    protected override async Task OnInitializedAsync()
    {
        token = await jsr.InvokeAsync<string>("localStorage.getItem", "jwtToken");
        user = await jsr.InvokeAsync<string>("localStorage.getItem", "name");
        plants = await PlantService.GetAllPlantsByUserId(user,token);
        
    }
    
    public void Observar(string? Id)
    {
        NavigationManager.NavigateTo($"PlantRecord/{Id}");
    }

    private void NuevaPlanta()
    {
        NavigationManager.NavigateTo("newPlant");
    }
}
