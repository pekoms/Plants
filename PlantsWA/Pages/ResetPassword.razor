@page "/resetPassword"
@using Microsoft.AspNetCore.Http
@using Plants.Api.Domain.Dtos
@using Plants.Domain.Domain.Dtos;
@using Plants.WA.Services
@using Plants.WA.Shared
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using System.Text.RegularExpressions;

<MudText Align="Align.Center" Typo="Typo.h4">Nueva Contraseña</MudText>
<EditForm Model="@model">
    <DataAnnotationsValidator />
    <MudItem xs="6" sm="6" md="6" lg="6" xl="6" xxl="6" Class="mx-auto pa-6">
        <MudCard Elevation="3">
            <MudCardContent>
                <MudTextField Label="Email" HelperText="Tu Email"
                @bind-Value="model.Email" For="@(() => model.Email)" />

            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(()=>SendEmail())" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Enviar</MudButton>                
            </MudCardActions>
        </MudCard>
    </MudItem>    
</EditForm>

@code {

    NewPasswordForm model = new NewPasswordForm();

    public class NewPasswordForm
    {
        [Required]
        //[StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Email { get; set; }  
    }

    [Inject]
    public IEmailService EmailService { get; set; }
    public IUserService UserService { get; set; }
    [Inject] private IDialogService DialogService { get; set; }

    private async void SendEmail()
    {
        try
        {
            if(await EmailService.CheckEmailExists(model.Email))
            {
                
            }
        }
        catch
        {
            // await form.ResetAsync();
            // error = true;   
            // StateHasChanged();
            // await Task.Delay(5000);
            // error = false;  
            // StateHasChanged();
        }

    }

    private void VolverAlInicio()
    {
        NavigationManager.NavigateTo("/");
    }
   
}

