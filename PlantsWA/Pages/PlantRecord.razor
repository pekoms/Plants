@page "/plantRecord/{Id}"
@using Plants.Api.Domain.Dtos
@using Plants.WA.Services
@using Plants.WA.Shared
@inject NavigationManager NavigationManager
@inject IJSRuntime jsr

<NavMenu />
<h3>Plants</h3>
@if (spinner == true)
{
    <button class="btn btn-Warning" type="button" disabled>
        <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
        Borrando Registro...
    </button>
}
<form>
   
    <div class="form-group">
        @if (plants == null && plants.Any())
        {
            <p>Cargando datos...</p>
        }
        else
        {
            @foreach (var data in plants)
            {
                @if (data.IsFertilised) { IsFertilisedTxt = "Si"; } else { IsFertilisedTxt = "No"; }
                @if (data.IsWatered) { IsWateredTxt = "Si"; } else { IsWateredTxt = "No"; }

                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-body">
                            <p class="card-title"> Se fertilizó:  @IsFertilisedTxt</p>
                            <p class="card-text"> Se regó: @IsWateredTxt</p>
                            @if (data.ContentImage != null)
                            {
                                <img src="@data.ContentImage" alt="Imagen cargada" />
                            }
                            <p class="card-text">Observaciones: @data.Observation</p>
                            <button type="button" class="btn btn-primary" @onclick="()=>Modificar(data.Id)">Modificar</button>
                            <button type="button" class="btn btn-warning" @onclick="()=>Eliminar(data.Id,data.PlantId)">Eliminar</button>
                            @if (spinner == true)
                            {
                                <button class="btn btn-Warning" type="button" disabled>
                                    <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
                                    Borrando Registro...
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    
    <button type="button" class="btn btn-danger btn-lg btn-block" @onclick="NuevoRegistro">Nueva Registro</button>       
    
</form>

@code {
    private bool spinner = false;
    public List<PlantRecordDTO> plants { get; set; } = new List<PlantRecordDTO>();
    [Parameter]
    public string? Id { get; set; }

    [Inject]
    public IPlantRecordService PlantRecordService { get; set; }
    private string IsFertilisedTxt = "";
    private string IsWateredTxt = "";
    private string token;


    protected override async Task OnInitializedAsync()
    {
        token = await jsr.InvokeAsync<string>("localStorage.getItem", "jwtToken");
        plants = await PlantRecordService.GetAllPlantsByPlantId(Id,token);
    }

    private void NuevoRegistro()
    {           
        NavigationManager.NavigateTo($"newPlantRecord/{Id}");
    }

    private void Modificar(string recordId)
    {
        NavigationManager.NavigateTo($"updatePlantRecord/{recordId}");
    }
    private async void Eliminar(string recordId,string plantId)
    {
        spinner = true;
        await PlantRecordService.Delete(recordId,token);       
        await Task.Delay(TimeSpan.FromSeconds(5));
        spinner = false;
        NavigationManager.NavigateTo($"PlantRecord/{plantId}"
        );
    }
}
